#be(id_235,
	[
	 5,
	{
	 cost(1,split(N,t)) :- not split(N) : true_split(N).
	 cost(1,split(N,f)) :- not true_split(N) : split(N).
	 0 { split(N) } 1 :- possible_split(N).
	}
	],
{
  true_split(9).
  true_split(5).
  true_split(4).
  true_split(14).
  true_split(13).
  possible_split((1 .. 14)).
  test_split(4).
  test_split(3).
  test_split(2).
  test_split(1).
  rel(c_SBJ,4).
  rel(c_ROOT,5).
  rel(c_PMOD,9).
  rel(c_PMOD,13).
  rel(c_P,14).
  rel(c_NMOD,8).
  rel(c_NMOD,7).
  rel(c_NMOD,3).
  rel(c_NMOD,2).
  rel(c_NMOD,12).
  rel(c_NMOD,11).
  rel(c_NMOD,1).
  rel(c_LOC,10).
  rel(c_ADV,6).
  pos(c_p,14).
  pos(c_VBZ,5).
  pos(c_NN,9).
  pos(c_NN,4).
  pos(c_NN,13).
  pos(c_NN,12).
  pos(c_JJR,2).
  pos(c_JJ,8).
  pos(c_JJ,3).
  pos(c_IN,6).
  pos(c_IN,10).
  pos(c_DT,7).
  pos(c_DT,11).
  pos(c_DT,1).
  last(14).
  head(root,5).
  head(9,8).
  head(9,7).
  head(9,10).
  head(6,9).
  head(5,6).
  head(5,4).
  head(5,14).
  head(4,3).
  head(4,2).
  head(4,1).
  head(13,12).
  head(13,11).
  head(10,13).
  form(9,"baby").
  form(8,"newborn").
  form(7,"a").
  form(6,"with").
  form(5,"poses").
  form(4,"couple").
  form(3,"Asian").
  form(2,"older").
  form(14,".").
  form(13,"table").
  form(12,"dinner").
  form(11,"the").
  form(10,"at").
  form(1,"An").
  first(1).
}).
