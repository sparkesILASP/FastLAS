#be(id_253,
	[
	 5,
	{
	 cost(1,split(N,t)) :- not split(N) : true_split(N).
	 cost(1,split(N,f)) :- not true_split(N) : split(N).
	 0 { split(N) } 1 :- possible_split(N).
	}
	],
{
  true_split(9).
  true_split(5).
  true_split(4).
  true_split(3).
  true_split(1).
  possible_split((1 .. 13)).
  test_split(1).
  rel(c_TMP,5).
  rel(c_SUB,4).
  rel(c_SBJ,3).
  rel(c_ROOT,1).
  rel(c_PMOD,9).
  rel(c_PMOD,13).
  rel(c_NMOD,8).
  rel(c_NMOD,7).
  rel(c_NMOD,2).
  rel(c_NMOD,12).
  rel(c_NMOD,11).
  rel(c_NMOD,10).
  rel(c_LOC,6).
  pos(c_VBN,8).
  pos(c_VBD,4).
  pos(c_RB,5).
  pos(c_NNS,3).
  pos(c_NN,9).
  pos(c_NN,13).
  pos(c_NN,12).
  pos(c_IN,6).
  pos(c_IN,10).
  pos(c_IN,1).
  pos(c_DT,7).
  pos(c_DT,2).
  pos(c_DT,11).
  last(13).
  head(root,1).
  head(9,8).
  head(9,7).
  head(9,10).
  head(6,9).
  head(4,6).
  head(4,5).
  head(4,3).
  head(3,2).
  head(13,12).
  head(13,11).
  head(10,13).
  head(1,4).
  form(9,"circuit").
  form(8,"closed").
  form(7,"a").
  form(6,"in").
  form(5,"still").
  form(4,"were").
  form(3,"paths").
  form(2,"the").
  form(13,"terminal").
  form(12,"battery").
  form(11,"the").
  form(10,"with").
  form(1,"because").
  first(1).
}).
