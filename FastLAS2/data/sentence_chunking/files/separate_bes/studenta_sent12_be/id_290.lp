#be(id_290,
	[
	 6,
	{
	 cost(1,split(N,t)) :- not split(N) : true_split(N).
	 cost(1,split(N,f)) :- not true_split(N) : split(N).
	 0 { split(N) } 1 :- possible_split(N).
	}
	],
{
  true_split(9).
  true_split(5).
  true_split(3).
  true_split(11).
  true_split(10).
  true_split(1).
  possible_split((1 .. 14)).
  test_split(1).
  rel(c_VC,5).
  rel(c_SUB,4).
  rel(c_SBJ,3).
  rel(c_ROOT,1).
  rel(c_PMOD,9).
  rel(c_NMOD,8).
  rel(c_NMOD,7).
  rel(c_NMOD,2).
  rel(c_NMOD,13).
  rel(c_NMOD,12).
  rel(c_NMOD,11).
  rel(c_COORD,10).
  rel(c_CONJ,14).
  rel(c_ADV,6).
  pos(c_VBZ,4).
  pos(c_VBN,5).
  pos(c_TO,6).
  pos(c_RB,11).
  pos(c_NN,9).
  pos(c_NN,2).
  pos(c_NN,14).
  pos(c_JJ,8).
  pos(c_JJ,13).
  pos(c_IN,1).
  pos(c_DT,7).
  pos(c_DT,12).
  pos(c_CD,3).
  pos(c_CC,10).
  last(14).
  head(root,1).
  head(9,8).
  head(9,7).
  head(9,10).
  head(6,9).
  head(5,6).
  head(4,5).
  head(4,3).
  head(3,2).
  head(14,13).
  head(14,12).
  head(14,11).
  head(10,14).
  head(1,4).
  form(9,"terminal").
  form(8,"positive").
  form(7,"the").
  form(6,"to").
  form(5,"connected").
  form(4,"is").
  form(3,"-89996").
  form(2,"terminal").
  form(14,"terminal").
  form(13,"negative").
  form(12,"the").
  form(11,"not").
  form(10,"but").
  form(1,"because").
  first(1).
}).
