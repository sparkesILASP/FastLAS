#be(id_281,
	[
	 8,
	{
	 cost(1,split(N,t)) :- not split(N) : true_split(N).
	 cost(1,split(N,f)) :- not true_split(N) : split(N).
	 0 { split(N) } 1 :- possible_split(N).
	}
	],
{
  true_split(9).
  true_split(5).
  true_split(2).
  true_split(14).
  true_split(13).
  true_split(11).
  true_split(10).
  true_split(1).
  possible_split((1 .. 14)).
  test_split(1).
  rel(c_VC,14).
  rel(c_SUB,12).
  rel(c_SBJ,11).
  rel(c_SBJ,1).
  rel(c_ROOT,2).
  rel(c_PMOD,7).
  rel(c_OBJ,5).
  rel(c_NMOD,6).
  rel(c_NMOD,4).
  rel(c_NMOD,3).
  rel(c_NMOD,10).
  rel(c_COORD,8).
  rel(c_CONJ,9).
  rel(c_ADV,13).
  pos(c_VBZ,2).
  pos(c_VBZ,12).
  pos(c_VBN,4).
  pos(c_VBN,14).
  pos(c_RB,13).
  pos(c_NNP,9).
  pos(c_NNP,7).
  pos(c_NNP,11).
  pos(c_NN,5).
  pos(c_IN,6).
  pos(c_IN,10).
  pos(c_EX,1).
  pos(c_DT,3).
  pos(c_CC,8).
  last(14).
  head(root,2).
  head(8,9).
  head(7,8).
  head(6,7).
  head(5,6).
  head(5,4).
  head(5,3).
  head(5,10).
  head(2,5).
  head(2,1).
  head(12,14).
  head(12,13).
  head(12,11).
  head(10,12).
  form(9,"B").
  form(8,"and").
  form(7,"A").
  form(6,"with").
  form(5,"path").
  form(4,"closed").
  form(3,"a").
  form(2,"is").
  form(14,"in.").
  form(13,"not").
  form(12,"is").
  form(11,"C").
  form(10,"that").
  form(1,"There").
  first(1).
}).
