#be(id_284,
	[
	 6,
	{
	 cost(1,split(N,t)) :- not split(N) : true_split(N).
	 cost(1,split(N,f)) :- not true_split(N) : split(N).
	 0 { split(N) } 1 :- possible_split(N).
	}
	],
{
  true_split(8).
  true_split(6).
  true_split(5).
  true_split(3).
  true_split(11).
  true_split(1).
  possible_split((1 .. 14)).
  test_split(1).
  rel(c_VC,3).
  rel(c_VC,11).
  rel(c_SBJ,8).
  rel(c_SBJ,1).
  rel(c_ROOT,2).
  rel(c_PMOD,14).
  rel(c_OBJ,5).
  rel(c_NMOD,9).
  rel(c_NMOD,7).
  rel(c_NMOD,4).
  rel(c_NMOD,13).
  rel(c_LOC,6).
  rel(c_DIR,12).
  rel(c_ADV,10).
  pos(c_WRB,6).
  pos(c_VBP,9).
  pos(c_VBP,2).
  pos(c_VBN,3).
  pos(c_VBN,11).
  pos(c_TO,12).
  pos(c_RB,10).
  pos(c_PRP,1).
  pos(c_NNS,8).
  pos(c_NN,5).
  pos(c_JJ,14).
  pos(c_DT,7).
  pos(c_DT,4).
  pos(c_DT,13).
  last(14).
  head(root,2).
  head(9,8).
  head(9,11).
  head(9,10).
  head(8,7).
  head(5,9).
  head(5,4).
  head(3,5).
  head(2,3).
  head(2,1).
  head(14,13).
  head(12,14).
  head(11,6).
  head(11,12).
  form(9,"are").
  form(8,"terminals").
  form(7,"the").
  form(6,"where").
  form(5,"point").
  form(4,"a").
  form(3,"reached").
  form(2,"have").
  form(14,"other.").
  form(13,"each").
  form(12,"to").
  form(11,"connected").
  form(10,"not").
  form(1,"You").
  first(1).
}).
