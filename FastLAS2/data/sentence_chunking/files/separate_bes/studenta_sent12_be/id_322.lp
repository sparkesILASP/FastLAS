#be(id_322,
	[
	 6,
	{
	 cost(1,split(N,t)) :- not split(N) : true_split(N).
	 cost(1,split(N,f)) :- not true_split(N) : split(N).
	 0 { split(N) } 1 :- possible_split(N).
	}
	],
{
  true_split(8).
  true_split(7).
  true_split(4).
  true_split(2).
  true_split(13).
  true_split(10).
  possible_split((1 .. 17)).
  test_split(2).
  test_split(1).
  rel(c_VC,13).
  rel(c_SUB,11).
  rel(c_SBJ,2).
  rel(c_SBJ,10).
  rel(c_ROOT,3).
  rel(c_PRP,8).
  rel(c_PRD,7).
  rel(c_PMOD,17).
  rel(c_NMOD,9).
  rel(c_NMOD,6).
  rel(c_NMOD,5).
  rel(c_NMOD,16).
  rel(c_NMOD,15).
  rel(c_NMOD,1).
  rel(c_LOC,14).
  rel(c_ADV,4).
  rel(c_ADV,12).
  pos(c_VBZ,3).
  pos(c_VBZ,11).
  pos(c_VBN,16).
  pos(c_VBN,13).
  pos(c_RB,4).
  pos(c_RB,12).
  pos(c_NN,7).
  pos(c_NN,17).
  pos(c_NN,10).
  pos(c_NN,1).
  pos(c_JJ,6).
  pos(c_IN,8).
  pos(c_IN,14).
  pos(c_DT,9).
  pos(c_DT,5).
  pos(c_DT,15).
  pos(c_CD,2).
  last(17).
  head(root,3).
  head(8,11).
  head(7,6).
  head(7,5).
  head(3,8).
  head(3,7).
  head(3,4).
  head(3,2).
  head(2,1).
  head(17,16).
  head(17,15).
  head(14,17).
  head(13,14).
  head(11,13).
  head(11,12).
  head(11,10).
  head(10,9).
  form(9,"the").
  form(8,"because").
  form(7,"circuit").
  form(6,"short").
  form(5,"a").
  form(4,"not").
  form(3,"is").
  form(2,"-13996").
  form(17,"path.").
  form(16,"closed").
  form(15,"a").
  form(14,"in").
  form(13,"contained").
  form(12,"not").
  form(11,"is").
  form(10,"battery").
  form(1,"Circuit").
  first(1).
}).
