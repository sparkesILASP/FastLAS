#be(id_330,
	[
	 6,
	{
	 cost(1,split(N,t)) :- not split(N) : true_split(N).
	 cost(1,split(N,f)) :- not true_split(N) : split(N).
	 0 { split(N) } 1 :- possible_split(N).
	}
	],
{
  true_split(9).
  true_split(4).
  true_split(2).
  true_split(15).
  true_split(12).
  true_split(10).
  possible_split((1 .. 18)).
  test_split(2).
  test_split(1).
  rel(c_VC,4).
  rel(c_VC,15).
  rel(c_SBJ,2).
  rel(c_SBJ,12).
  rel(c_ROOT,3).
  rel(c_PMOD,9).
  rel(c_PMOD,18).
  rel(c_NMOD,8).
  rel(c_NMOD,7).
  rel(c_NMOD,6).
  rel(c_NMOD,17).
  rel(c_NMOD,11).
  rel(c_NMOD,1).
  rel(c_LGS,16).
  rel(c_COORD,10).
  rel(c_CONJ,13).
  rel(c_ADV,5).
  rel(c_ADV,14).
  pos(c_VBZ,3).
  pos(c_VBZ,13).
  pos(c_VBN,4).
  pos(c_VBN,15).
  pos(c_TO,5).
  pos(c_RB,14).
  pos(c_NN,9).
  pos(c_NN,8).
  pos(c_NN,18).
  pos(c_NN,11).
  pos(c_NN,1).
  pos(c_JJ,7).
  pos(c_IN,16).
  pos(c_DT,6).
  pos(c_DT,17).
  pos(c_CD,2).
  pos(c_CD,12).
  pos(c_CC,10).
  last(18).
  head(root,3).
  head(9,8).
  head(9,7).
  head(9,6).
  head(5,9).
  head(4,5).
  head(3,4).
  head(3,2).
  head(3,10).
  head(2,1).
  head(18,17).
  head(16,18).
  head(15,16).
  head(13,15).
  head(13,14).
  head(13,12).
  head(12,11).
  head(10,13).
  form(9,"terminal").
  form(8,"battery").
  form(7,"positve").
  form(6,"the").
  form(5,"to").
  form(4,"connected").
  form(3,"is").
  form(2,"-265996").
  form(18,"gap").
  form(17,"a").
  form(16,"by").
  form(15,"seperated").
  form(14,"not").
  form(13,"is").
  form(12,"-265996").
  form(11,"terminal").
  form(10,"and").
  form(1,"Terminal").
  first(1).
}).
