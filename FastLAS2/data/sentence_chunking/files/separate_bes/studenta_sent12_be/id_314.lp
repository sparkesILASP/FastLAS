#be(id_314,
	[
	 7,
	{
	 cost(1,split(N,t)) :- not split(N) : true_split(N).
	 cost(1,split(N,f)) :- not true_split(N) : split(N).
	 0 { split(N) } 1 :- possible_split(N).
	}
	],
{
  true_split(9).
  true_split(4).
  true_split(15).
  true_split(14).
  true_split(12).
  true_split(11).
  true_split(1).
  possible_split((1 .. 15)).
  test_split(1).
  rel(c_VC,11).
  rel(c_TMP,14).
  rel(c_SUB,10).
  rel(c_SBJ,4).
  rel(c_ROOT,1).
  rel(c_PRD,12).
  rel(c_PMOD,9).
  rel(c_NMOD,8).
  rel(c_NMOD,7).
  rel(c_NMOD,6).
  rel(c_NMOD,5).
  rel(c_NMOD,3).
  rel(c_NMOD,2).
  rel(c_AMOD,15).
  rel(c_AMOD,13).
  pos(c_WP,15).
  pos(c_VB,11).
  pos(c_NNS,9).
  pos(c_NNS,4).
  pos(c_NN,8).
  pos(c_NN,14).
  pos(c_MD,10).
  pos(c_JJ,3).
  pos(c_JJ,12).
  pos(c_IN,5).
  pos(c_IN,1).
  pos(c_DT,6).
  pos(c_DT,2).
  pos(c_DT,13).
  pos(c_CD,7).
  last(15).
  head(root,1).
  head(9,8).
  head(9,6).
  head(8,7).
  head(5,9).
  head(4,5).
  head(4,3).
  head(4,2).
  head(14,15).
  head(14,13).
  head(11,14).
  head(11,12).
  head(10,4).
  head(10,11).
  head(1,10).
  form(9,"terminals").
  form(8,"battery").
  form(7,"two").
  form(6,"the").
  form(5,"between").
  form(4,"states").
  form(3,"electrical").
  form(2,"the").
  form(15,"what").
  form(14,"matter").
  form(13,"no").
  form(12,"different").
  form(11,"be").
  form(10,"will").
  form(1,"because").
  first(1).
}).
