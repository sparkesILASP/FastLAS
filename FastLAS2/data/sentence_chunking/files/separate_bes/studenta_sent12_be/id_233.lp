#be(id_233,
	[
	 3,
	{
	 cost(1,split(N,t)) :- not split(N) : true_split(N).
	 cost(1,split(N,f)) :- not true_split(N) : split(N).
	 0 { split(N) } 1 :- possible_split(N).
	}
	],
{
  true_split(5).
  true_split(3).
  true_split(10).
  possible_split((1 .. 13)).
  test_split(3).
  test_split(2).
  test_split(1).
  rel(c_VC,5).
  rel(c_SBJ,1).
  rel(c_ROOT,4).
  rel(c_PRD,6).
  rel(c_PMOD,13).
  rel(c_PMOD,10).
  rel(c_NMOD,9).
  rel(c_NMOD,8).
  rel(c_NMOD,7).
  rel(c_NMOD,12).
  rel(c_NMOD,11).
  rel(c_COORD,2).
  rel(c_CONJ,3).
  pos(c_VBN,9).
  pos(c_VB,5).
  pos(c_PRPd,7).
  pos(c_NNS,10).
  pos(c_NN,3).
  pos(c_NN,13).
  pos(c_NN,1).
  pos(c_MD,4).
  pos(c_JJ,8).
  pos(c_IN,6).
  pos(c_IN,11).
  pos(c_DT,12).
  pos(c_CC,2).
  last(13).
  head(root,4).
  head(6,10).
  head(5,6).
  head(4,5).
  head(4,1).
  head(2,3).
  head(13,12).
  head(11,13).
  head(10,9).
  head(10,8).
  head(10,7).
  head(10,11).
  head(1,2).
  form(9,"closed").
  form(8,"own").
  form(7,"their").
  form(6,"in").
  form(5,"be").
  form(4,"will").
  form(3,"c").
  form(2,"and").
  form(13,"battery.").
  form(12,"the").
  form(11,"with").
  form(10,"paths").
  form(1,"b").
  first(1).
}).
