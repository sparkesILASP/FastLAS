#be(id_223,
	[
	 3,
	{
	 cost(1,split(N,t)) :- not split(N) : true_split(N).
	 cost(1,split(N,f)) :- not true_split(N) : split(N).
	 0 { split(N) } 1 :- possible_split(N).
	}
	],
{
  true_split(6).
  true_split(4).
  true_split(10).
  possible_split((1 .. 13)).
  test_split(4).
  test_split(3).
  test_split(2).
  test_split(1).
  rel(c_VC,6).
  rel(c_SBJ,2).
  rel(c_ROOT,5).
  rel(c_PMOD,13).
  rel(c_PMOD,10).
  rel(c_NMOD,9).
  rel(c_NMOD,8).
  rel(c_NMOD,12).
  rel(c_NMOD,11).
  rel(c_NMOD,1).
  rel(c_COORD,3).
  rel(c_CONJ,4).
  rel(c_ADV,7).
  pos(c_VBP,5).
  pos(c_VBN,6).
  pos(c_TO,7).
  pos(c_NN,13).
  pos(c_NN,10).
  pos(c_NN,1).
  pos(c_JJ,9).
  pos(c_IN,11).
  pos(c_DT,8).
  pos(c_DT,12).
  pos(c_CD,4).
  pos(c_CD,2).
  pos(c_CC,3).
  last(13).
  head(root,5).
  head(7,10).
  head(6,7).
  head(5,6).
  head(5,2).
  head(3,4).
  head(2,3).
  head(2,1).
  head(13,12).
  head(11,13).
  head(10,9).
  head(10,8).
  head(10,11).
  form(9,"negtive").
  form(8,"the").
  form(7,"to").
  form(6,"connected").
  form(5,"are").
  form(4,"-367998").
  form(3,"and").
  form(2,"-367999").
  form(13,"battery").
  form(12,"the").
  form(11,"of").
  form(10,"terminal").
  form(1,"terminal").
  first(1).
}).
