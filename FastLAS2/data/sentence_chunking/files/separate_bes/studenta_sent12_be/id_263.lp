#be(id_263,
	[
	 5,
	{
	 cost(1,split(N,t)) :- not split(N) : true_split(N).
	 cost(1,split(N,f)) :- not true_split(N) : split(N).
	 0 { split(N) } 1 :- possible_split(N).
	}
	],
{
  true_split(7).
  true_split(6).
  true_split(5).
  true_split(4).
  true_split(11).
  possible_split((1 .. 14)).
  test_split(4).
  test_split(3).
  test_split(2).
  test_split(1).
  rel(c_VC,7).
  rel(c_TMP,6).
  rel(c_SBJ,2).
  rel(c_ROOT,5).
  rel(c_PMOD,11).
  rel(c_OBJ,14).
  rel(c_NMOD,9).
  rel(c_NMOD,13).
  rel(c_NMOD,10).
  rel(c_NMOD,1).
  rel(c_COORD,3).
  rel(c_CONJ,4).
  rel(c_APPO,12).
  rel(c_ADV,8).
  pos(c_VBP,5).
  pos(c_VBN,7).
  pos(c_VBN,10).
  pos(c_VBG,12).
  pos(c_TO,8).
  pos(c_RB,6).
  pos(c_NNS,1).
  pos(c_NNP,4).
  pos(c_NNP,2).
  pos(c_NN,14).
  pos(c_NN,11).
  pos(c_DT,9).
  pos(c_DT,13).
  pos(c_CC,3).
  last(14).
  head(root,5).
  head(8,11).
  head(7,8).
  head(5,7).
  head(5,6).
  head(5,2).
  head(3,4).
  head(2,3).
  head(2,1).
  head(14,13).
  head(12,14).
  head(11,9).
  head(11,12).
  head(11,10).
  form(9,"the").
  form(8,"to").
  form(7,"connected").
  form(6,"still").
  form(5,"are").
  form(4,"B").
  form(3,"and").
  form(2,"A").
  form(14,"battery").
  form(13,"the").
  form(12,"containing").
  form(11,"circuit").
  form(10,"closed").
  form(1,"bulbs").
  first(1).
}).
